"""

有一个整型数组 arr 和一个大小为 w 的窗口从数组的最左边滑到最右边,窗口每次向右边滑一个位置。 返回一个长度为n-w+1的数组res，res[i]表示每一种窗口状态下的最大值。 以数组为[4,3,5,4,3,3,6,7]，w=3为例。因为第一个窗口[4,3,5]的最大值为5，第二个窗口[3,5,4]的最大值为5，第三个窗口[5,4,3]的最大值为5。第四个窗口[4,3,3]的最大值为4。第五个窗口[3,3,6]的最大值为6。第六个窗口[3,6,7]的最大值为7。所以最终返回[5,5,5,4,6,7]。

给定整形数组arr及它的大小n，同时给定w，请返回res数组。保证w小于等于n，同时保证数组大小小于等于500。

测试样例：
[4,3,5,4,3,3,6,7],8,3
返回：[5,5,5,4,6,7]

思路：设置一个双端队列：qmax(存放数组下标)，队头存窗口内的最大值，队尾的元素，依次小于队头。
判断，如果遍历的数组元素小于等于队尾元素，添加到队尾，如果大于队尾元素，弹出当前队尾元素
"""


class SlideWindow:
    def slide(self, arr, n, w):
        qmax = []
        res = []

        for i in range(n):
            while qmax != []:
                j = qmax[-1]
                if arr[j] > arr[i]:
                    break
                else:
                    qmax.pop()
            qmax.append(i)
            if i >= w - 1:
                while i - qmax[0] >= w:
                    qmax.pop(0)
                res.append(arr[qmax[0]])
        return res


if __name__ == '__main__':
    a = [4, 3, 5, 4, 3, 3, 6, 7]
    s = SlideWindow()
    o = s.slide(a,8,3)
    print(o)
